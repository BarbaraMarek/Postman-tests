{
	"info": {
		"_postman_id": "63137498-ecb8-498b-91e3-8d69df6a37e8",
		"name": "Json Placeholder exercises",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "tests for correct userId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"Should return correct userId\", function () {",
							"    pm.expect(response.userId).to.eql(1)",
							"});",
							"",
							"pm.test(\"Should return correct userId\", function () {",
							"    pm.expect(response.userId).to.eql(0)",
							"});",
							"",
							"pm.test(\"Should return correct userId\", function () {",
							"    pm.expect(response.userId).to.eql(2)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "tests correct count of posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"Should return 100 posts\", function () {",
							"    pm.expect(response.length).to.eql(100)",
							"});",
							"",
							"pm.test(\"Should return 100 posts\", function () {",
							"    pm.expect(response.length).to.eql(99)",
							"});",
							"",
							"pm.test(\"Should return 100 posts\", function () {",
							"    pm.expect(response.length).to.eql(101)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET users",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				},
				"description": "Wyświetlenie wszystkich użytkowników"
			},
			"response": []
		},
		{
			"name": "tests for number of users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"Should return correct number of users\", function () {",
							"    pm.expect(response.length).to.eql(10)",
							"});",
							"",
							"pm.test(\"Should return correct number of users\", function () {",
							"    pm.expect(response.length).to.eql(9)",
							"});",
							"",
							"pm.test(\"Should return correct number of users\", function () {",
							"    pm.expect(response.length).to.eql(11)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "created new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Jan Piotr\",\n    \"username\": \"Kowalski\",\n    \"email\": \"jan.kowalski@gmail.com\",\n    \"address\": {\n        \"street\": \"Ulica\",\n        \"suite\": \"1\",\n        \"city\": \"Katowice\",\n        \"zipcode\": \"44-240\",\n        \"geo\": {\n            \"lat\": \"-37.3159\",\n            \"lng\": \"81.1496\"\n        }\n    },\n    \"phone\": \"555-444-333\",\n    \"website\": \"jankowalski.pl\",\n    \"company\": {\n        \"name\": \"Jana-Kowalskiego\",\n        \"catchPhrase\": \"Multi-layered client-server neural-net\",\n        \"bs\": \"harness real-time e-markets\"\n    }\n}"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "test for user=11",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"Should return correct userId\", function () {",
							"    pm.expect(response.id).to.eql(11)",
							"});",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Jan Piotr\",\n    \"username\": \"Kowalski\",\n    \"email\": \"jan.kowalski@gmail.com\",\n    \"address\": {\n        \"street\": \"Ulica\",\n        \"suite\": \"1\",\n        \"city\": \"Katowice\",\n        \"zipcode\": \"44-240\",\n        \"geo\": {\n            \"lat\": \"-37.3159\",\n            \"lng\": \"81.1496\"\n        }\n    },\n    \"phone\": \"555-444-333\",\n    \"website\": \"jankowalski.pl\",\n    \"company\": {\n        \"name\": \"Jana-Kowalskiego\",\n        \"catchPhrase\": \"Multi-layered client-server neural-net\",\n        \"bs\": \"harness real-time e-markets\"\n    }\n}"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "created new user id=12",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"Should return correct username\", function () {",
							"    pm.expect(response.username).to.eql(\"Nowak\")",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Jan Piotr 1\",\n    \"username\": \"Kowalski\",\n    \"email\": \"jan.kowalski@gmail.com\",\n    \"address\": {\n        \"street\": \"Ulica\",\n        \"suite\": \"1\",\n        \"city\": \"Katowice\",\n        \"zipcode\": \"44-240\",\n        \"geo\": {\n            \"lat\": \"-37.3159\",\n            \"lng\": \"81.1496\"\n        }\n    },\n    \"phone\": \"555-444-333\",\n    \"website\": \"jankowalski.pl\",\n    \"company\": {\n        \"name\": \"Jana-Kowalskiego\",\n        \"catchPhrase\": \"Multi-layered client-server neural-net\",\n        \"bs\": \"harness real-time e-markets\"\n    }\n}"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put userId=1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"Should return correct username\", function () {",
							"    pm.expect(response.username).to.eql(\"Nowak\")",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Jan Piotr 1\",\n    \"username\": \"Nowak\",\n    \"email\": \"jan.kowalski@gmail.com\",\n    \"address\": {\n        \"street\": \"Ulica\",\n        \"suite\": \"1\",\n        \"city\": \"Katowice\",\n        \"zipcode\": \"44-240\",\n        \"geo\": {\n            \"lat\": \"-37.3159\",\n            \"lng\": \"81.1496\"\n        }\n    },\n    \"phone\": \"555-444-333\",\n    \"website\": \"jankowalski.pl\",\n    \"company\": {\n        \"name\": \"Jana-Kowalskiego\",\n        \"catchPhrase\": \"Multi-layered client-server neural-net\",\n        \"bs\": \"harness real-time e-markets\"\n    },\n    \"id\": 11\n}"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put userId=2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 2,\n    \"name\": \"Katarzyna\",\n    \"username\": \"Igła\",\n    \"email\": \"Shanna@melissa.tv\",\n    \"address\": {\n        \"street\": \"Victor Plains\",\n        \"suite\": \"Suite 879\",\n        \"city\": \"Wisokyburgh\",\n        \"zipcode\": \"90566-7771\",\n        \"geo\": {\n            \"lat\": \"-43.9509\",\n            \"lng\": \"-34.4618\"\n        }\n    },\n    \"phone\": \"010-692-6593 x09125\",\n    \"website\": \"anastasia.net\",\n    \"company\": {\n        \"name\": \"Deckow-Crist\",\n        \"catchPhrase\": \"Proactive didactic contingency\",\n        \"bs\": \"synergize scalable supply-chains\"\n    }\n}"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/2",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete userId=2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/2",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get photo id=5000",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/photos/5000",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"photos",
						"5000"
					]
				},
				"description": "Get photo id=5000"
			},
			"response": []
		},
		{
			"name": "Creted photo id=5001",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/photos",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"photos"
					]
				},
				"description": "Creted photo id=50001"
			},
			"response": []
		},
		{
			"name": "Rename the title of photo id=5000",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"albumId\": 100,\r\n  \"id\": 5000,\r\n  \"title\": \"this is the last photo\",\r\n  \"url\": \"https://via.placeholder.com/600/6dd9cb\",\r\n  \"thumbnailUrl\": \"https://via.placeholder.com/150/6dd9cb\"\r\n}"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/photos/5000",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"photos",
						"5000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete photo id=5001",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"albumId\": 100,\r\n  \"id\": 5000,\r\n  \"title\": \"this is the last photo\",\r\n  \"url\": \"https://via.placeholder.com/600/6dd9cb\",\r\n  \"thumbnailUrl\": \"https://via.placeholder.com/150/6dd9cb\"\r\n}"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/photos/5001",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"photos",
						"5001"
					]
				}
			},
			"response": []
		},
		{
			"name": "get comments for postId=100",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/100/comments",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"100",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "get comments for postId=100 & comments id=500",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"postId\": 100,\r\n    \"id\": 496,\r\n    \"name\": \"et occaecati asperiores quas voluptas ipsam nostrum\",\r\n    \"email\": \"Zola@lizzie.com\",\r\n    \"body\": \"neque unde voluptatem iure\\nodio excepturi ipsam ad id\\nipsa sed expedita error quam\\nvoluptatem tempora necessitatibus suscipit culpa veniam porro iste vel\"\r\n  },\r\n  {\r\n    \"postId\": 100,\r\n    \"id\": 497,\r\n    \"name\": \"doloribus dolores ut dolores occaecati\",\r\n    \"email\": \"Dolly@mandy.co.uk\",\r\n    \"body\": \"non dolor consequatur\\nlaboriosam ut deserunt autem odit\\nlibero dolore non nesciunt qui\\naut est consequatur quo dolorem\"\r\n  },\r\n  {\r\n    \"postId\": 100,\r\n    \"id\": 498,\r\n    \"name\": \"dolores minus aut libero\",\r\n    \"email\": \"Davion@eldora.net\",\r\n    \"body\": \"aliquam pariatur suscipit fugiat eos sunt\\noptio voluptatem eveniet rerum dignissimos\\nquia aut beatae\\nmodi consequatur qui rerum sint veritatis deserunt est\"\r\n  },\r\n  {\r\n    \"postId\": 100,\r\n    \"id\": 499,\r\n    \"name\": \"excepturi sunt cum a et rerum quo voluptatibus quia\",\r\n    \"email\": \"Wilburn_Labadie@araceli.name\",\r\n    \"body\": \"et necessitatibus tempora ipsum quaerat inventore est quasi quidem\\nea repudiandae laborum omnis ab reprehenderit ut\\nratione sit numquam culpa a rem\\natque aut et\"\r\n  },\r\n  {\r\n    \"postId\": 100,\r\n    \"id\": 500,\r\n    \"name\": \"ex eaque eum natus\",\r\n    \"email\": \"Emma@joanny.ca\",\r\n    \"body\": \"perspiciatis quis doloremque\\nveniam nisi eos velit sed\\nid totam inventore voluptatem laborum et eveniet\\naut aut aut maxime quia temporibus ut omnis\"\r\n  }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments?postId=100&id=500",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "postId",
							"value": "100"
						},
						{
							"key": "id",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "created new comment id=501",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\r\n    \"postId\": 100,\r\n    \"id\": 500,\r\n    \"name\": \"new name\",\r\n    \"email\": \"Emma@joanny.ca\",\r\n    \"body\": \"perspiciatis quis doloremque\\nveniam nisi eos velit sed\\nid totam inventore voluptatem laborum et eveniet\\naut aut aut maxime quia temporibus ut omnis\"\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments?postId=100&id=500",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "postId",
							"value": "100"
						},
						{
							"key": "id",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "test for 500 comments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Should return 500 comments\", function () {\r",
							"    pm.expect(response.length).to.eql(500)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "test for comment id=2 for post id=1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Should return correct email\", function () {\r",
							"    pm.expect(response.email).to.eql(\"Jayne_Kuhic@sydney.com\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments?postId=1&id=2",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "postId",
							"value": "1"
						},
						{
							"key": "id",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get photos",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/photos",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"photos"
					]
				}
			},
			"response": []
		},
		{
			"name": "created new photo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"albumId\": 1,\r\n        \"title\": \"new photo\",\r\n        \"url\": \"https://via.placeholder.com/600/92c952\",\r\n        \"thumbnailUrl\": \"https://via.placeholder.com/150/92c952\"\r\n    },"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/photos?albumId=1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"photos"
					],
					"query": [
						{
							"key": "albumId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "new title and another album for photo id=5000",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\r\n    \"albumId\": 99,\r\n    \"id\": 5000,\r\n    \"title\": \"new title\",\r\n    \"url\": \"https://via.placeholder.com/600/6dd9cb\",\r\n    \"thumbnailUrl\": \"https://via.placeholder.com/150/6dd9cb\"\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/photos/5000",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"photos",
						"5000"
					]
				}
			},
			"response": []
		},
		{
			"name": "test correct email for post id=1 comment id=1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Should return correct username\", function () {\r",
							"    pm.expect(response[0].email).to.eql(\"Eliseo@gardner.biz\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments?postId=1&id=1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "postId",
							"value": "1"
						},
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	]
}